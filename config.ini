[env]
# set to true in case you are running on a notebook
notebook = False

[mapelites]
# number of initial random samples
initial_random_population = 100
# numer of map elites iterations
iterations = 10000
# True: solve a minimization problem. False: solve a maximization problem
minimization = True

[opt_function]
# Define the optimization function.
# This must be the name of a class subclassing the abstract class ConstrainedFunction
name = Rosenbrok
# Number of dimensions of the optimization function
dimensions = 2

[crossover]
# crossover function taken from ea_operators.py file.
# name of called function is {type}_crossover(). If `type = UNIFORM` then the function call is `uniform_crossover()`
type = UNIFORM
# list of arguments to the above function
indpb = 0.5

[mutation]
# mutation function taken from ea_operators.py file.
# name of called function is {type}_mutation(). If `type = GAUSSIAN` then the function call is `gaussian_mutation()`
type = GAUSSIAN
# list of arguments to the above function
mu = 1
sigma = 0.1
# probability of each attribute to be mutated
indpb = 0.5